shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sliderInput("n", "Number of observations", 2, 1000, 500),
plotOutput("plot")
)
server <- function(input, output, session) {
observe({
# Re-execute this reactive expression after 1000 milliseconds
invalidateLater(1000, session)
# Do something each time this is invalidated.
# The isolate() makes this observer _not_ get invalidated and re-executed
# when input$n changes.
print(paste("The value of input$n is", isolate(input$n)))
})
# Generate a new histogram at timed intervals, but not when
# input$n changes.
output$plot <- renderPlot({
# Re-execute this reactive expression after 2000 milliseconds
invalidateLater(2000)
hist(rnorm(isolate(input$n)))
})
}
shinyApp(ui, server)
}
library(shiny); runApp('GitHub/InnoSpace/experiments/experimentInvalidate.R')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
isolate(reactiveSearch$data)
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('R/webapp')
runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
resultado <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count", rows = 1000)))
resultado <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count", rows = 1000))
View(resultado)
source('~/GitHub/InnoSpace/R/webapp/modules/corpusManager.R', encoding = 'UTF-8')
shiny::runApp('GitHub/InnoSpace/R/webapp')
resultado2 <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count", rows = 10)))
resultado2 <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count", rows = 10))
View(resultado2)
resultado3 <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count, counter_total_all", rows = 1000))
View(resultInit)
View(resultado3)
View(resultado)
View(resultado2)
resultado3 <- conn$search("BibliotecaJuridicaDigital",
params = list(q = 'text: "Ley"', fl = "file, page, count", start = 10, rows = 10))
View(resultado3)
resultado4 <- rbind(resultado2, resultado3)
View(resultado2)
View(resultado4)
View(resultado2)
View(resultado4)
View(resultado)
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
View(resultNew)
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
View(resultNew)
result
view(result)
print(result)
class(result)
print(result$datatable)
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
source('~/GitHub/InnoSpace/R/webapp/modules/searcherManager.R', encoding = 'UTF-8')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
Q
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='asainz', token='7E57FFDDE6D62B8EB01FB550CB46D59B', secret='LXL9qPH1gKZ/5S+QsWSQj2d/aDAsnIhl8Trai4p1')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
force(pathDocument)
View(txtboxes)
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
install.packages("grImport2")
shiny::runApp('GitHub/InnoSpace/R/webapp')
install.packages("maps")
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
view(imagesSearch)
y <- read.csv(text="fruit,cost,quantity")
View(y)
class(y)
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
View(imageList)
runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
View(image)
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
View(result_search)
install.packages("collections")
shiny::runApp('GitHub/InnoSpace/R/webapp')
x <- dict()
View(x)
x$set("1", list("hola", "5"))
View(x)
View(x)
View(x)
x$get("1")
x$get("2")
View(x)
View(x)
View(x)
y <- dict(list("Hola", 34), "1")
View(y)
y$get("1")
y$get("2")
y$get("Hola")
y$get("34")
y$keys
y$keys()
y$values()
y$get(1)
y$get("1")
x <- dict(items = NULL, keys = NULL)
z <- dict(items = NULL, keys = NULL)
View(x)
View(y)
View(x)
View(y)
View(x)
View(y)
View(z)
View(y)
View(x)
y <- dict(list("Hola", "1"))
y$keys()
y$values()
y <- dict("1" = list("hola", 56))
d <- dict(list(apple = 5, orange = 10))
d$keys()
d$values()
x <- dict(list("1" = list("Adios", 34)))
x$get(1)
x$get("1")
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
View(imageList)
View(pageDict)
view(imagesSearch)
view(pageDict)
shiny::runApp('GitHub/InnoSpace/R/webapp')
View(imageList)
print(currentPage)
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
View(pageDict)
pageDict$keys()
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
pageDict$keys
pageDict$keys()
shiny::runApp('GitHub/InnoSpace/R/webapp')
x <- dict(list())
z <- "Alvaro"
list(z = "Hola")
y <- list(z = "Hola")
View(y)
y <- list(eval(z) = "Hola")
x <- list()
x[[z]] = "Hola"
View(x)
shiny::runApp('GitHub/InnoSpace/R/webapp')
View(pageList)
pageList$keys()
pageDict$keys()
imagesSearch$keys()
imagesSearch$get("1")
shiny::runApp('GitHub/InnoSpace/R/webapp')
imagesSearch$get("1")
imagesSearch$get("2")
imagesSearch$get("1")
shiny::runApp('GitHub/InnoSpace/R/webapp')
imagesSearch$get("1", "FALSE")
imagesSearch$get("2", "FALSE")
checkImage <- function(imagesSearch, currentDoc, currentPage) {
docDict <- imagesSearch$get(as.character(currentDoc), "FALSE")
if(is.character(docDict)) {
return(FALSE)
}
else {
imageList <- docDict$get(as.character(currentPage), "FALSE")
if(is.character(imageList)) {
return(FALSE)
}
else {
return(imageList)
}
}
}
runApp('GitHub/InnoSpace/R/webapp')
checkImage(imagesSearch, 1, 1)
checkImage(imagesSearch, 1, 11)
checkImage(imagesSearch, 2, 11)
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
search_nav <- function(imagesSearch, result = NULL, currentDoc, currentPage, corpusPathSession, allowContains, input, output, session) {
imageList <- NULL
resultCheck <- NULL
if(!is.null(result)) {
fileName <- result$datatable[currentDoc,"Doc"]
page <- as.character(currentPage)
fileName <- substring(fileName, 1, nchar(fileName)-4)
resultCheck <- checkImage(imagesSearch, currentDoc, currentPage)
if(is.character(resultCheck)) {
terms <- input$search
pathDocument <- getDocumentPath(as.character(fileName), corpusPathSession)
imageList <- generateImagePDF(corpusPathSession, pathDocument, fileName, terms, page, allowContains, output, session)
showImage(imageList, fileName, page, output, session)
}
else {
showImage(resultCheck, fileName, page, output, session)
resultCheck <- "TRUE"
}
}
return(list("operation" = resultCheck, "imageList" = imageList))
}
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
View(resultSearch)
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
print(seq(1,5))
for(i in seq(1,10)) {print(i)}
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
docList <- list()
docList[[as.character(currentDoc)]] = 1
docList[[as.character(1)]] = 1
imagesSearch <<- dict(docList)
imagesSearch$keys()
imagesSearch$get("1")
imagesSearch$set(as.character(1), 2)
imagesSearch$get("1")
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('R/webapp')
shiny::runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
source('~/GitHub/InnoSpace/R/webapp/modules/searcherManager.R', encoding = 'UTF-8')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
runApp('R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
runApp('GitHub/InnoSpace/R/webapp')
pathData <- "C:/Users/Alvaro/Desktop/ruta/pdf"
pathData <- "C:/Users/Alvaro/Desktop/ruta/pdf.pdf"
txtboxes <- pdf_data(pathData)
library(pdftools)
txtboxes <- pdf_data(pathData)
pathData <- "C:/Users/Alvaro/Desktop/ruta/10_1007_978_94_007_6552_8_1"
txtboxes <- pdf_data(pathData)
pathData <- "C:/Users/Alvaro/Desktop/ruta/10_1007_978_94_007_6552_8_1.pdf"
txtboxes <- pdf_data(pathData)
saveRDS(txtboxes, paste0(pathData, "/hola")
)
pathData
pathSave <- "C:/Users/Alvaro/Desktop/ruta/save"
saveRDS(txtboxes, pathSave
)
saveRDS(txtboxes, paste0(pathSave, "10_1007_978_94_007_6552_8_1.rds")
)
saveRDS(txtboxes, paste0(pathSave, "/10_1007_978_94_007_6552_8_1.rds")
)
sink("Hola")
message("hola")
pathData
print(pathData)
pathData <- "C:/Users/Alvaro/Desktop/ruta"
pathData
print(pathData)
print("hola")
print("Hola")
pathData
list.files(path = pathData, pattern = 10_1007_978_94_007_6552_8_1, full.names = TRUE,
recursive = TRUE, ignore.case = TRUE)
list.files(path = pathData, pattern = "10_1007_978_94_007_6552_8_1", full.names = TRUE,
recursive = TRUE, ignore.case = TRUE)
list.files(path = pathData, pattern = "10_1007_978_94_007_6552_8_1.pdf", full.names = TRUE,
recursive = TRUE, ignore.case = TRUE)
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
shiny::runApp('GitHub/InnoSpace/R/webapp')
source('~/GitHub/TFM-Development/SolrQuantedaSearch.R', encoding = 'UTF-8')
source('~/GitHub/TFM-Development/SolrQuantedaSearch.R', encoding = 'UTF-8')
source('~/GitHub/TFM-Development/SolrQuantedaSearch.R', encoding = 'UTF-8')
source('~/GitHub/TFM-Development/SolrQuantedaSearch.R', encoding = 'UTF-8')
source('~/GitHub/TFM-Development/SolrQuantedaSearch.R', encoding = 'UTF-8')
